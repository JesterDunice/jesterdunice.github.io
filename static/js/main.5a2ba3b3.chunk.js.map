{"version":3,"sources":["frame.svg","Rave.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","id","transform","d","stroke","fillRule","fill","_ref3","width","height","clipPath","xlinkHref","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","getRandomColor","color","Math","floor","random","Rave","useState","setFill","useEffect","setTimeout","className","xmlns","href","font-size","startOffset","opts","playerVars","autoplay","App","src","alt","videoId","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iOAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAqB,IAAMC,cAAc,WAAY,CACvDC,GAAI,QACU,IAAMD,cAAc,OAAQ,CAC1CE,UAAW,2BACXC,EAAG,ypBACHC,OAAQ,QACRC,SAAU,UACVC,KAAM,UAGJC,EAAqB,IAAMP,cAAc,QAAS,CACpDQ,MAAO,OACPC,OAAQ,OACRC,SAAU,aACVC,UAAW,mBAGT,EAAW,SAAkBC,GAC/B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQzB,EAAyBsB,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMZ,cAAc,MAAOxB,EAAS,CACtDgC,MAAO,IACPC,OAAQ,IACRO,QAAS,gBACTV,KAAM,OACNW,IAAKJ,GACJE,GAAQD,EAAqB,IAAMd,cAAc,QAAS,KAAMc,GAAS,KAAMf,EAAOQ,IAGvFW,EAAa,IAAMC,YAAW,SAAUJ,EAAOE,GACjD,OAAoB,IAAMjB,cAAc,EAAUxB,EAAS,CACzDqC,OAAQI,GACPF,O,GAEU,I,WCzCR,SAASK,IAGd,IAFA,IACIC,EAAQ,IACHzC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1ByC,EAAK,UAAMA,GAAN,OAHS,mBAGaC,KAAKC,MAAsB,GAAhBD,KAAKE,YAE7C,OAAOH,EA4BMI,MAnBf,WAAiB,IAAD,EACUC,mBAAS,QADnB,mBACPpB,EADO,KACDqB,EADC,KAOd,OAJAC,qBAAU,WACRC,YAAW,kBAAMF,EAAQP,OAAmB,MAC3C,CAACd,IAGF,yBAAKwB,UAAU,YAAY5B,UAAU,WAAWM,MAAM,MAAMC,OAAO,MAAMO,QAAQ,gBAAgBV,KAAK,OAAOyB,MAAM,8BACjH,0BAAM5B,EAAE,iDAAiDC,OAAO,OAAOH,GAAG,OAAOK,KAAK,SACtF,8BACE,8BAAU0B,KAAK,QAAQC,YAAU,QAAQC,YAAY,MAAM5B,KAAMA,GAAjE,mBCnBF6B,G,MAAO,CACX1B,OAAQ,IACRD,MAAO,IACP4B,WAAY,CAEVC,SAAU,KAqBCC,MAjBf,WACE,OACE,yBAAKR,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,WACf,yBAAKS,IAAI,iBAAiBT,UAAU,WAAWU,IAAI,OACnD,kBAAC,EAAD,CAAOV,UAAU,QAAQtB,MAAO,IAAKC,OAAQ,MAC7C,kBAAC,EAAD,OAEA,yBAAKqB,UAAU,SACf,kBAAC,IAAD,CAASW,QAAQ,cAAcN,KAAMA,QCjBzBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5a2ba3b3.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"mask\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  transform: \"translate(328.5, 1109.5)\",\n  d: \"M1 972.5C227.411 1071.96 322.892 1098.63 430.5 1063.5V1172.01V1259.48V1331.45L400 1445.4L411 1686.5L377 1795.26L400 1852.23L364.5 1948L354.5 2051L340 2205L354.5 2283.5L400 2331.01C939.5 2410 1212.5 2447.5 1662 2361.5L1711.5 2255.06L1688.5 2084.14V1878.72L1645.5 1625.5V1460L1628 1259.48L1663 1059C1817 1034.5 1902.51 1007.09 2046 940.11L1927 574L1875.5 396L1784 218.41L1535 96.5L1270.5 1.5C1287.45 57.2499 1272.24 82.2409 1220 120.451C1158.67 168.906 1115.29 185.086 1028.5 202.417C957.827 207.264 917.777 205.06 844.5 179.926C767.791 131.004 740.261 101.348 753.5 39.4842L618.5 96.5L531 148L380.5 211L303.5 255.5L252 294.378L109 625L52.5 804.5L21.5 892L1 972.5Z\",\n  stroke: \"black\",\n  fillRule: \"evenodd\",\n  fill: \"#a0a\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"image\", {\n  width: \"100%\",\n  height: \"100%\",\n  clipPath: \"url(#mask)\",\n  xlinkHref: \"me-colored.jpg\"\n});\n\nvar SvgFrame = function SvgFrame(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 448,\n    height: 672,\n    viewBox: \"0 0 2731 4096\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFrame, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/frame.fcfe3381.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport Color from 'color';\n\nexport function getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color = `${color}${letters[Math.floor(Math.random() * 16)]}`;\n  }\n  return color;\n}\n\nexport function getLightRandomColor() {\n  const color = getRandomColor();\n  return Color(color).isDark() ? getLightRandomColor() : color;\n}\n\n\nfunction Rave() {\n  const [fill, setFill] = useState('#fff');\n\n  useEffect(() => {\n    setTimeout(() => setFill(getRandomColor()), 64);\n  }, [fill]);\n\n  return (\n    <svg className=\"rave-text\" transform=\"scale(4)\" width=\"459\" height=\"256\" viewBox=\"0 0 4594 2567\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0.5 2566.5C1078.5 344 4015.17 -77 4593.5 11.5\" stroke=\"none\" id=\"rave\" fill=\"none\" />\n      <text>\n        <textPath href=\"#rave\" font-size=\"250px\" startOffset=\"30%\" fill={fill}>\n          Friday rave!\n        </textPath>\n      </text>\n    </svg>\n  );\n}\n\nexport default Rave;\n","import React from 'react';\nimport YouTube from 'react-youtube';\nimport { ReactComponent as Frame } from './frame.svg';\nimport Rave from './Rave';\nimport './App.css';\n\nconst IMAGE_WIDTH = 4480;\nconst IMAGE_HEIGHT = 6720;\nconst ASPECT_RATIO = IMAGE_WIDTH / IMAGE_HEIGHT;\n\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n  },\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"wrapper\">\n        <img src=\"me-colored.jpg\" className=\"me-image\" alt=\"me\" />\n        <Frame className=\"short\" width={448} height={672} />\n        <Rave />\n        </div>\n        <div className=\"video\">\n        <YouTube videoId=\"yKy1tmA_TvM\" opts={opts} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}